security:
  # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
  password_hashers:
    Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: "auto"

  # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
  providers:
    app_user_provider:
      entity:
        class: App\Entity\User
        property: email

  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false

    login:
      pattern: ^/api/login
      stateless: true
      json_login:
        check_path: /api/login_check
        success_handler: lexik_jwt_authentication.handler.authentication_success
        failure_handler: lexik_jwt_authentication.handler.authentication_failure

    api:
      pattern: ^/api
      stateless: true
      jwt: ~

    main:
      lazy: true
      provider: app_user_provider
      custom_authenticator: App\Security\UsersAuthenticator
      logout:
        path: app_logout
        target: app_home # Page d'accueil après déconnexion
      remember_me:
        secret: "%kernel.secret%"
        lifetime: 604800
        path: /
      entry_point: App\Security\UsersAuthenticator
      form_login:
        login_path: app_login
        check_path: app_login
        default_target_path: /redirect # Redirection après la connexion
        csrf_token_id: authenticate

  # Contrôle d'accès
  access_control:
    - { path: ^/admin/films, roles: [ROLE_ADMIN, ROLE_EMPLOYER] }
    - { path: ^/admin/seance, roles: [ROLE_ADMIN, ROLE_EMPLOYER] }
    - { path: ^/admin/salles, roles: [ROLE_ADMIN, ROLE_EMPLOYER] }
    - { path: ^/admin/avis, roles: [ROLE_ADMIN, ROLE_EMPLOYER] }
    - { path: ^/admin, roles: ROLE_ADMIN }
    - { path: ^/employe, roles: ROLE_EMPLOYER }
    - { path: ^/reservation, roles: ROLE_USER }
    - { path: ^/api/login_check, roles: PUBLIC_ACCESS } # Accès public pour la route de login
    - { path: ^/api/incidents, roles: [ROLE_ADMIN, ROLE_EMPLOYER] }
    - { path: ^/api, roles: IS_AUTHENTICATED_FULLY } # Sécuriser les routes API

when@test:
  security:
    password_hashers:
      Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
        algorithm: auto
        cost: 4 # Valeur la plus basse pour bcrypt
        time_cost: 3 # Valeur la plus basse pour argon
        memory_cost: 10 # Valeur la plus basse pour argon