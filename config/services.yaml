# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    env(MONGODB_URL): ''
    env(MONGODB_DB): ''

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # ðŸ”§ DÃ©sactivation du StopwatchCommandLogger (qui utilise CommandSubscriber)
    Doctrine\Bundle\MongoDBBundle\APM\StopwatchCommandLogger:
        autowire: false
        autoconfigure: false
        public: false
        tags: []
        arguments: []
        calls: []
        abstract: true


    # Listener pour enrichir le contenu du JWT (dans le token)
    App\EventListener\JWTCreatedListener:
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_created, method: onJWTCreated }
    
    # Extension Doctrine pour filtrer les rÃ©servations par user connectÃ©
    App\Doctrine\Extension\CurrentUserExtension:
        tags:
            - { name: 'api_platform.doctrine.orm.query_extension.collection' }
            - { name: 'api_platform.doctrine.orm.query_extension.item' }

    
    AwsS3Client:
        class: Aws\S3\S3Client
        public: true
        arguments:
        -
            version: 'latest'
            region: 'eu-west-1'  # âœ… corrigÃ©
            credentials:
            key: '%env(AWS_ACCESS_KEY_ID)%'
            secret: '%env(AWS_SECRET_ACCESS_KEY)%'
        
